






        
        <!-- Add thruster macro -->
        
        <xacro:macro 
        name="thruster_macro" 
        params="
            namespace
            thruster_id
            thruster_xyz
            thruster_rpy">


    <link name=${namespace}/thruster_${thruster_id}>
                <inertial>
        <mass value="0.001"/>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <inertia 
            ixx="1.6666666666666667e-08"
            iyy="1.6666666666666667e-08"
            izz="1.6666666666666667e-08"
            ixy="0"
            ixz="0"
            iyz="0"/>
    </inertial>


        
        
    <visual>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
            <mesh 
                filename="$(find uuv_assistants)/meshes/propeller_1.stl" 
                scale="1 1 1"/>
        </geometry>
        <material name="gray"/>        
    </visual>
    

    </link>

    <joint name="${namespace}/thruster_${thruster_id}_joint" type="continuous">
        <origin xyz="${thruster_xyz}" rpy="${thruster_rpy}"/>
        <axis xyz="1 0 0"/>
        <parent link="${namespace}/base_link"/>
        <child link="${namespace}/thruster_${thruster_id}"/>
    </joint>

    <gazebo>
        <!-- Thruster ROS plugin -->
        <plugin 
            name="${namespace}/thruster_${thruster_id}_thruster_plugin" 
            filename="libuuv_thruster_ros_plugin.so">
            <!-- Name of the thruster link -->
            <linkName>${namespace}/thruster_${thruster_id}</linkName>
            <!-- Name of the joint between thruster and vehicle base link -->
            <jointName>${namespace}/thruster_${thruster_id}_joint</jointName>
            <!-- Make the thruster aware of its id -->
            <thrusterID>${thruster_id}</thrusterID>
            <!-- Gain of the input command signal -->
            <gain>1</gain>
            <!-- Maximum allowed input value for the input signal for thruster unit -->
            <clampMax>100000</clampMax>

            <!-- Minimum allowed value for the input signal for thruster unit -->
            <clampMin>0</clampMin>

            <!-- Minimum and maximum thrust force output allowed -->
            <thrustMin>-100000</thrustMin>
            <thrustMax>100000</thrustMax>

            <!--
            Value from 0 to 1 to set the efficiency of the output thrust force
            Default value is 1.0
            -->
            <thrust_efficiency>1</thrust_efficiency>

            <!--
            Value from 0 to 1 to set the efficiency of the propeller as a factor
            to be multiplied to the current value of the state variable at each
            iteration.
            Default value is 1.0
            -->
            <propeller_efficiency>1</propeller_efficiency>
            
            <!-- Simple zero-order model -->
    <dynamics>
      <type>FirstOrder</type>
      <timeConstant>0</timeConstant>
    </dynamics>
            
            <!--
        Choose one of the model for the steady-state curve describing the
        relationship between the state variable and the output thrust force
        
        Basic curve
            Input: x
            Output: thrust
            Function: thrust = rotorConstant * x * abs(x)
    -->
    <conversion>
      <type>Basic</type>
      <rotorConstant>0.002</rotorConstant>
    </conversion>
        </plugin>
    </gazebo>

        </xacro:macro>



