<launch>
  <!-- Remember to first launch Gazebo with a underwater world model
  Example:
  >> roslaunch uuv_description ocean_waves.launch
    or
  >> roslaunch uuv_description empty_underwater_world.launch
  -->
  <arg name="joy_id" default="0"/>

  <include file="$(find uuv_descriptions)/models/rexrov/launch/upload_rexrov_default.launch">
    <arg name="mode" value="sonar"/>
    <arg name="namespace" value="rexrov"/>
    <arg name="x" value="35"/>
    <arg name="y" value="50"/>
    <arg name="z" value="-30"/>
  </include>

  <include file="$(find uuv_thruster_manager)/launch/thruster_manager.launch">
    <arg name="uuv_name" value="rexrov" />
    <arg name="model_name" value="rexrov" />
  </include>

  <group ns="rexrov">
    <rosparam file="$(find uuv_control_cascaded_pid)/config/rexrov/inertial.yaml" command="load"/>
    <rosparam file="$(find uuv_control_cascaded_pid)/config/rexrov/vel_pid_control.yaml" command="load"/>

    <node pkg="uuv_control_cascaded_pid" type="AccelerationControl.py" name="acceleration_control"
            output="screen">
      <param name="tf_prefix" type="string" value="rexrov/" />
    </node>

    <node pkg="uuv_control_cascaded_pid" type="VelocityControl.py" name="velocity_control"
          output="screen">
      <remap from="odom" to="/rexrov/pose_gt"/>
      <remap from="cmd_accel" to="/rexrov/cmd_accel"/>
    </node>
  </group>

  <include file="$(find uuv_vehicle_teleop)/launch/uuv_teleop.launch">
    <arg name="uuv_name" value="$(arg namespace)"/>
    <arg name="joy_id" value="$(arg joy_id)"/>
    <arg name="output_topic" value="cmd_vel"/>
    <arg name="message_type" value="twist"/>
  </include>

</launch>
